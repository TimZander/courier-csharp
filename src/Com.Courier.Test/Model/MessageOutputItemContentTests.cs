/*
 * Courier API Reference
 *
 * The Courier REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@courier.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.Courier.Api;
using Com.Courier.Model;
using Com.Courier.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.Courier.Test.Model
{
    /// <summary>
    ///  Class for testing MessageOutputItemContent
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MessageOutputItemContentTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MessageOutputItemContent
        //private MessageOutputItemContent instance;

        public MessageOutputItemContentTests()
        {
            // TODO uncomment below to create an instance of MessageOutputItemContent
            //instance = new MessageOutputItemContent();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MessageOutputItemContent
        /// </summary>
        [Fact]
        public void MessageOutputItemContentInstanceTest()
        {
            // TODO uncomment below to test "IsType" MessageOutputItemContent
            //Assert.IsType<MessageOutputItemContent>(instance);
        }


        /// <summary>
        /// Test the property 'Html'
        /// </summary>
        [Fact]
        public void HtmlTest()
        {
            // TODO unit test for the property 'Html'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Body'
        /// </summary>
        [Fact]
        public void BodyTest()
        {
            // TODO unit test for the property 'Body'
        }
        /// <summary>
        /// Test the property 'Subject'
        /// </summary>
        [Fact]
        public void SubjectTest()
        {
            // TODO unit test for the property 'Subject'
        }
        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Fact]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }
        /// <summary>
        /// Test the property 'Blocks'
        /// </summary>
        [Fact]
        public void BlocksTest()
        {
            // TODO unit test for the property 'Blocks'
        }

    }

}
