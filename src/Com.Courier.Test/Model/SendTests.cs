/*
 * Courier API Reference
 *
 * The Courier REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@courier.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.Courier.Api;
using Com.Courier.Model;
using Com.Courier.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.Courier.Test.Model
{
    /// <summary>
    ///  Class for testing Send
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SendTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Send
        //private Send instance;

        public SendTests()
        {
            // TODO uncomment below to create an instance of Send
            //instance = new Send();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Send
        /// </summary>
        [Fact]
        public void SendInstanceTest()
        {
            // TODO uncomment below to test "IsType" Send
            //Assert.IsType<Send>(instance);
        }


        /// <summary>
        /// Test the property 'Event'
        /// </summary>
        [Fact]
        public void EventTest()
        {
            // TODO unit test for the property 'Event'
        }
        /// <summary>
        /// Test the property 'Recipient'
        /// </summary>
        [Fact]
        public void RecipientTest()
        {
            // TODO unit test for the property 'Recipient'
        }
        /// <summary>
        /// Test the property 'Brand'
        /// </summary>
        [Fact]
        public void BrandTest()
        {
            // TODO unit test for the property 'Brand'
        }
        /// <summary>
        /// Test the property 'Data'
        /// </summary>
        [Fact]
        public void DataTest()
        {
            // TODO unit test for the property 'Data'
        }
        /// <summary>
        /// Test the property 'Override'
        /// </summary>
        [Fact]
        public void OverrideTest()
        {
            // TODO unit test for the property 'Override'
        }
        /// <summary>
        /// Test the property 'Preferences'
        /// </summary>
        [Fact]
        public void PreferencesTest()
        {
            // TODO unit test for the property 'Preferences'
        }
        /// <summary>
        /// Test the property 'Profile'
        /// </summary>
        [Fact]
        public void ProfileTest()
        {
            // TODO unit test for the property 'Profile'
        }

    }

}
