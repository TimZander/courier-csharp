/*
 * Courier API Reference
 *
 * The Courier REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@courier.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Com.Courier.Client;
using Com.Courier.Api;
// uncomment below to import models
//using Com.Courier.Model;

namespace Com.Courier.Test.Api
{
    /// <summary>
    ///  Class for testing MessagesAPIApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MessagesAPIApiTests : IDisposable
    {
        private MessagesAPIApi instance;

        public MessagesAPIApiTests()
        {
            instance = new MessagesAPIApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MessagesAPIApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MessagesAPIApi
            //Assert.IsType<MessagesAPIApi>(instance);
        }

        /// <summary>
        /// Test GetMessageById
        /// </summary>
        [Fact]
        public void GetMessageByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageId = null;
            //var response = instance.GetMessageById(messageId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test GetMessageHistoryById
        /// </summary>
        [Fact]
        public void GetMessageHistoryByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageId = null;
            //string type = null;
            //var response = instance.GetMessageHistoryById(messageId, type);
            //Assert.IsType<InlineResponse2002>(response);
        }

        /// <summary>
        /// Test GetMessageOutput
        /// </summary>
        [Fact]
        public void GetMessageOutputTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageId = null;
            //var response = instance.GetMessageOutput(messageId);
            //Assert.IsType<InlineResponse2003>(response);
        }

        /// <summary>
        /// Test GetMessages
        /// </summary>
        [Fact]
        public void GetMessagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cursor = null;
            //string _event = null;
            //string list = null;
            //string messageId = null;
            //string notification = null;
            //string recipient = null;
            //string status = null;
            //var response = instance.GetMessages(cursor, _event, list, messageId, notification, recipient, status);
            //Assert.IsType<InlineResponse2001>(response);
        }
    }
}
